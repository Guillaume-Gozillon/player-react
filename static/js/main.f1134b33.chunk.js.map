{"version":3,"sources":["data.js","components/Player.js","components/Song.js","util.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["chillHop","name","artist","cover","audio","color","id","uuidv4","active","Player","audioRef","currentSong","isPlaying","setIsPlaying","songInfo","setSongInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","getTime","time","Math","floor","slice","skiptTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","pickUpColor","background","className","currentTime","style","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","src","playAudio","playPromise","undefined","then","catch","error","console","log","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1134b33.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\n\nfunction chillHop() {\n  return [\n    {\n      name: 'Jazz Cabbage',\n      artist: 'Ian Ewing, Strehlow',\n      cover: 'https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg',\n      audio :\"https://mp3.chillhop.com/serve.php/?mp3=9363\",\n      color: ['#95494C', '#FCF1DD'],\n      id: uuidv4(),\n      active: true\n    },\n    {\n      name: 'Lagoons',\n      artist: 'Strehlow, Chris Mazuera',\n      cover: 'https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg',\n      audio :\"https://mp3.chillhop.com/serve.php/?mp3=8266\",\n      color: ['#95494C', '#FCF1DD'],\n      id: uuidv4(),\n      active: false\n    },\n    {\n      name: 'Sails',\n      artist: 'Strehlow, Aylior',\n      cover: 'https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg',\n      audio :\"https://mp3.chillhop.com/serve.php/?mp3=9364\",\n      color: ['#95494C', '#FCF1DD'],\n      id: uuidv4(),\n      active: false\n    },\n    {\n      name: 'Central Coast',\n      artist: 'Ian Ewing, Strehlow',\n      cover: 'https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg',\n      audio :\"https://mp3.chillhop.com/serve.php/?mp3=9364\",\n      color: ['#95494C', '#FCF1DD'],\n      id: uuidv4(),\n      active: false\n    },\n    {\n      name: 'Tamarind',\n      artist: 'Ian Ewing, Strehlow, TyLuv.',\n      cover: 'https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg',\n      audio :\"https://mp3.chillhop.com/serve.php/?mp3=8607\",\n      color: ['#95494C', '#FCF1DD'],\n      id: uuidv4(),\n      active: false\n    },\n    {\n      name: 'Cocktail Hour',\n      artist: 'Strehlow',\n      cover: 'https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg',\n      audio :\"https://mp3.chillhop.com/serve.php/?mp3=9352\",\n      color: ['#95494C', '#FCF1DD'],\n      id: uuidv4(),\n      active: false\n    },\n    {\n      name: 'Ocean Alley',\n      artist: 'Strehlow, Aylior',\n      cover: 'https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg',\n      audio :\"https://mp3.chillhop.com/serve.php/?mp3=9360\",\n      color: ['#95494C', '#FCF1DD'],\n      id: uuidv4(),\n      active: false\n    }\n  ]\n}\n\nexport default chillHop","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faPlay,\n    faAngleLeft,\n    faAngleRight,\n    faPause\n} from \"@fortawesome/free-solid-svg-icons\"\n\nconst Player = ({\n    audioRef,\n    currentSong,\n    isPlaying,\n    setIsPlaying,\n    songInfo,\n    setSongInfo,\n    songs,\n    setCurrentSong,\n    setSongs\n}) => {\n    const activeLibraryHandler = nextPrev => {\n        const newSongs = songs.map(song => {\n            if (song.id === nextPrev.id) {\n                return {\n                    ...song,\n                    active: true\n                } \n            }\n            else {\n                return {\n                    ...song,\n                    active: false\n                }\n            }\n        })\n        setSongs(newSongs)\n    }\n    // Event handler\n    const playSongHandler = () => {\n        if (isPlaying) {\n            audioRef.current.pause()\n            setIsPlaying(!isPlaying)\n        } else {\n            audioRef.current.play()\n            setIsPlaying(!isPlaying)\n        }\n    }\n\n    const getTime = time => {\n        return (\n            Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\n        )\n    }\n\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value\n        setSongInfo({ ...songInfo, currentTime: e.target.value })\n    }\n\n    const skiptTrackHandler = async direction => {\n        let currentIndex = songs.findIndex(song => song.id === currentSong.id)\n        if (direction === 'skip-forward') {\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length])\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length])\n        }\n        if (direction === 'skip-back') {\n            if ((currentIndex - 1) % songs.length === - 1) {\n                await setCurrentSong(songs[songs.length - 1])\n                activeLibraryHandler(songs[songs.length - 1])\n                if (isPlaying) audioRef.current.play();\n                return;\n            }\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length])\n            activeLibraryHandler(songs[(currentIndex - 1) % songs.length])\n        }\n        if (isPlaying) audioRef.current.play();\n    }\n\n    // Add styles\n    const trackAnim = {\n        transform: `translateX(${songInfo.animationPercentage}%)`\n    }\n\n    const pickUpColor = {\n        background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`\n    }\n\n    return (\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <div style={pickUpColor} className=\"track\">\n                    <input\n                        min={0}\n                        max={songInfo.duration || 0}\n                        value={songInfo.currentTime}\n                        onChange={dragHandler}\n                        type=\"range\" \n                    />\n                    <div style={trackAnim} className=\"animate-track\"></div>\n                </div>\n                <p>{songInfo.duration \n                    ? getTime(songInfo.duration) \n                    : '0:00'}\n                </p>\n            </div>\n            <div className=\"play-control\">\n                <FontAwesomeIcon\n                    onClick={() => skiptTrackHandler('skip-back')}\n                    className=\"skip-back\"\n                    size=\"2x\"\n                    icon={faAngleLeft}\n                />\n                <FontAwesomeIcon\n                    onClick={playSongHandler}\n                    className=\"play\"\n                    size=\"2x\"\n                    icon={isPlaying ? faPause : faPlay}\n                />\n                <FontAwesomeIcon\n                    onClick={() => skiptTrackHandler('skip-forward')}\n                    className=\"skip-forward\"\n                    size=\"2x\"\n                    icon={faAngleRight}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Player","const Song = ({currentSong}) => {\n    return (\n        <div className=\"song-container\">\n            <img alt={currentSong.name} src={currentSong.cover}></img>\n            <h2>{currentSong.name}</h2>\n            <h3>{currentSong.artist}</h3>\n        </div>\n    )\n}\n\nexport default Song","\nexport const playAudio = (isPlaying, audioRef) => {\n    if (isPlaying) {\n      const playPromise = audioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise\n          .then((audio) => {\n            audioRef.current.play();\n          })\n          .catch((error) => console.log(error));\n      }\n    }\n  };","import { playAudio } from \"../util\";\n\nconst LibrarySong = ({ \n    song, \n    songs, \n    id, \n    setCurrentSong, \n    audioRef, \n    isPlaying, \n    setSongs \n}) => {\n    const songSelectHandler = async () => {\n        await setCurrentSong(song)\n        // Add active state\n        const newSongs = songs.map(song => {\n            if (song.id === id) {\n                return {\n                    ...song,\n                    active: true\n                }\n            }\n            else {\n                return {\n                    ...song,\n                    active: false\n                }\n            }\n        })\n\n        setSongs(newSongs)\n        playAudio(isPlaying, audioRef)\n    }\n\n    return (\n        <div\n            onClick={songSelectHandler}\n            className={`library-song ${song.active ? 'selected' : \"\"}`}>\n            <img alt={song.name} src={song.cover}></img>\n            <div className=\"song-description\">\n                <h3>{song.name}</h3>\n                <h4>{song.artist}</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default LibrarySong\n","import LibrarySong from \"./LibrarySong\"\n\nconst Library = ({ \n    songs, \n    setCurrentSong, \n    audioRef, \n    isPlaying, \n    setSongs, \n    libraryStatus \n}) => {\n    return (\n        <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\n            <h2>Library</h2>\n            <div className=\"library-songs\">\n                {songs.map(song => <LibrarySong\n                    songs={songs}\n                    setCurrentSong={setCurrentSong}\n                    song={song}\n                    id={song.id}\n                    key={song.id}\n                    audioRef={audioRef}\n                    isPlaying={isPlaying}\n                    setSongs={setSongs}\n                />)}\n            </div>\n        </div>\n    )\n}\n\nexport default Library\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\n    return (\n        <nav>\n            <h1>Waves</h1>\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\n                Library\n                <FontAwesomeIcon icon={faMusic} />\n            </button>\n        </nav>\n    )\n}\n\nexport default Nav","import React, { useState, useRef } from \"react\";\n\nimport \"./style/app.scss\"\nimport data from './data'\n\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\"\n\n\nfunction App() {\n  // Ref to select specific HTMLElement\n  const audioRef = useRef(null)\n\n  // State\n  const [songs, setSongs] = useState(data())\n  const [currentSong, setCurrentSong] = useState(songs[0])\n  const [isPlaying, setIsPlaying] = useState(false)\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0\n  })\n\n  const [libraryStatus, setLibraryStatus] = useState(false)\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime\n    const duration = e.target.duration\n    // Calculate percentage\n    const roundedCurrent = Math.round(current)\n    const roundedDuration = Math.round(duration)\n\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100)\n\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage: animation\n    })\n  }\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id)\n        await setCurrentSong(songs[(currentIndex + 1) % songs.length])\n        if (isPlaying) audioRef.current.play()\n  }\n\n  return (\n    <div className={`App ${libraryStatus ? 'library-active' : ''}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong} \n        setSongs={setSongs}\n      />\n      <Library \n        audioRef={audioRef} \n        songs={songs} \n        setCurrentSong={setCurrentSong} \n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n        ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}